#!/usr/bin/perl
#
#  Script to run a daily processor.  This just creates and runs a LINZ::GNSS::DailyProcessor 
#  instance using the specified configuration
#

use strict;
use LINZ::GNSS::DailyProcessor;
use Getopt::Std;

my %opts;
getopts('cbfs:e:m:',\%opts);

if( $opts{c} || $opts{b} )
{
    my $config=LINZ::GNSS::DailyProcessor::ExampleConfig;
    if( $opts{b})
    {
        $config=~s/^\#[^\n]*\n/\n/mg;
        $config=~s/\n\s*\n/\n/g;
    }
    print $config;
    exit();
}

@ARGV || die <<EOD;

syntax: run_daily_processor [options] configuration_file [option=value option=value ...]

Options can include
   -c          Just print an example configuration file and exit
   -b          Print example configuration more briefly
   -f          Force retry of all failures 
               (retry_max_age_days=0, retry_interval_days=0)
   -s yyyy-ddd Start date
   -e yyyy-ddd End date
   -m #        Maximum number of days to process

EOD

my $configfile=shift @ARGV;
my @params=@ARGV;
if( $opts{f} )
{
    push(@params,'retry_max_age_days=0','retry_interval_days=0');
}
push(@params,'start_date='.$opts{s}) if $opts{s};
push(@params,'end_date='.$opts{e}) if $opts{e};
push(@params,'max_days_per_run='.$opts{m}) if $opts{m};

eval
{
    die "$configfile is missing\n" if ! -e $configfile;
    my $processor=new LINZ::GNSS::DailyProcessor($configfile,@params);
    $processor->runProcessor( sub {
        my $prescripts=$processor->get('prerun_script');
        my $ok=1;
        $ok=$processor->runScripts($prescripts) if $prescripts !~ /^\s*none\s*$/i;
        return $ok if ! $ok;
        $processor->runBernesePcf() if $processor->get('pcf');
        my $postscripts=$processor->get('postrun_script');
        $ok=$processor->runScripts($postscripts) if $postscripts !~ /^\s*none\s*$/i;
        return $ok;
        });
};
if( $@ )
{
    print "Processing failed: $@\n";
}
