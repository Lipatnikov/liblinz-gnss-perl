#!/usr/bin/perl
use strict;
use Getopt::Std;

use LINZ::GNSS::Time qw/
    time_elements
    seconds_datetime 
    datetime_seconds
    gnssweek_seconds
    $SECS_PER_DAY
    /;

my $syntax=<<EOF;

Syntax: gpsday [-f format] date 

Converts dates between different GPS formats.  Dates can be entered as:

   yyyy-mm-dd    Year, month, day
   yyyy-ddd      Year, day number
   wwww-d        GPS week, day
   ssssssssss    Unix time stamp
   now           Right now!

All are in terms of UTC time.  Seconds are referred to the start of the day,
(ie 00:00:00)

Format is a string that can include:
   D  the date as yyyy-mm-dd
   W  the week
   d  the day of week as a number
   n  the day of year
   Y  the year
   u  the unix timestamp
EOF


@ARGV || die $syntax;

my %opts;
getopts('f:h',\%opts);

my $time=join(' ',@ARGV);
die $syntax if $opts{h};

my $seconds;
if( $time=~ /^((?:19|20)\d\d)\W*(\d\d)\W*(\d\d)$/ )
{
    $seconds=datetime_seconds($1.'-'.$2.'-'.$3);
}
elsif( $time=~/^((?:19|20)\d\d)\W+(\d{1,3})$/ )
{
    $seconds=datetime_seconds(sprintf("%04d-%03d",$1,$2));
}
elsif( $time=~/^(\d\d\d\d)(?:w\s*|\W+)([0-6])$/i )
{
    $seconds=gnssweek_seconds($1)+$2*$SECS_PER_DAY;
}
elsif( $time =~ /^\d{10}$/ )
{
    $seconds=$time+0;
}
elsif( lc($time) eq 'now' )
{
    $seconds=time();
}
else
{
    die "Invalid date specified: $time\n";
}
    
my ($year,$gnssweek,$doy,$wday,$hour) = time_elements($seconds);

my $day=substr('SunMonTueWedThuFriSat',$wday*3,3);

my $datestr=seconds_datetime($seconds);

if( $opts{f} )
{
    my $format=$opts{f};
    my $strings={
        'D'=>substr($datestr,0,10),
        'W'=>$gnssweek,
        'd'=>$wday,
        'n'=>sprintf("%03d",$doy),
        'Y'=>$year,
        'u'=>$seconds,
    };
    $format=$opts{f};
    $format=~ s/([DWdnYu])/$strings->{$1}/eg;
    print $format,"\n";
}
else
{
    print "Date           : $datestr ($day)\n";
    print "Year/day       : $year $doy\n";
    print "GNSS week/day  : $gnssweek $wday\n";
    print "Unix timestamp : $seconds\n";
    print "\nNote: all values are UTC\n";
}



