#!/usr/bin/perl
use strict;
use Getopt::Std;

use LINZ::GNSS::Time qw/
    time_elements
    seconds_datetime 
    datetime_seconds
    gnssweek_seconds
    seconds_julianday
    $SECS_PER_DAY
    /;


my %opts;
getopts('f:h',\%opts);

if( ! @ARGV || $opts{h} )
{
    help();
    exit();
}

my $time=join(' ',@ARGV);

my $seconds;
if( $time=~ /^((?:19|20)\d\d)\W*(\d\d)\W*(\d\d)$/ )
{
    $seconds=datetime_seconds($1.'-'.$2.'-'.$3);
}
elsif( $time=~/^((?:19|20)\d\d)\W+(\d{1,3})$/ )
{
    $seconds=datetime_seconds(sprintf("%04d-%03d",$1,$2));
}
elsif( $time=~/^(\d\d\d\d)(?:w\s*|\W+)([0-6])$/i )
{
    $seconds=gnssweek_seconds($1)+$2*$SECS_PER_DAY;
}
elsif( $time =~ /^\d{10}$/ )
{
    $seconds=$time+0;
}
elsif( $time =~ /^\d{5}$/ )
{
    $seconds=julianday_seconds($time);
}
elsif( lc($time) eq 'now' )
{
    $seconds=time();
}
else
{
    die "Invalid date specified: $time\n";
}
    
my ($year,$gnssweek,$doy,$wday,$hour) = time_elements($seconds);

my $day=substr('SunMonTueWedThuFriSat',$wday*3,3);
my $jday=seconds_julianday($seconds);
my $datestr=seconds_datetime($seconds);

if( $opts{f} )
{
    my $format=$opts{f};
    my $strings={
        'D'=>substr($datestr,0,10),
        'W'=>$gnssweek,
        'd'=>$wday,
        'n'=>sprintf("%03d",$doy),
        'Y'=>$year,
        'y'=>substr($year,2),
        'u'=>$seconds,
        'j'=>$jday,
    };
    $format=$opts{f};
    $format=~ s/([DWdnYyuj])/$strings->{$1}/eg;
    print $format,"\n";
}
else
{
    print "Date                : $datestr ($day)\n";
    print "Year/day            : $year $doy\n";
    print "GNSS week/day       : $gnssweek $wday\n";
    print "Modified Julian day : $jday\n";
    print "Unix timestamp      : $seconds\n";
    print "\nNote: all values are UTC\n";
}

sub help
{
    my ($brief)=@_;
    require Pod::Usage;
    Pod::Usage::pod2usage(
    {
        -verbose=>$brief ? 99 : 2,
        -sections=>'Synopsis',
        -exitval=>2,
    });
}

__DATA__

=head1 Name

gpsdate - Convert between GPS date formats

=head1 Synopsis

    gpsdate [-f format] date

=head1 Description

Converts dates between different GPS formats.  Dates can be entered as:

   yyyy-mm-dd    Year, month, day
   yyyy-ddd      Year, day number
   wwww-d        GPS week, day
   ssssssssss    Unix time stamp
   jjjjj         Julian day
   now           Right now!

All are in terms of UTC time.  Seconds are referred to the start of the day,
(ie 00:00:00)

If the format parameter is specified then the output will be a string based
on the format with the following substitutions.

   D  the date as yyyy-mm-dd
   W  the week
   d  the day of week as a number
   n  the day of year
   Y  the year
   u  the unix timestamp
   j  julian day

=cut
